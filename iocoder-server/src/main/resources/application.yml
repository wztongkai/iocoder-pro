server:
  port: 8888

iocoder:
  # 名称
  name: iocoder
  # 版本
  version: 1.0-SNAPSHOT
  # 版权年份
  copyrightYear: 2022
  # 文件上传路径
  profile: /Users/wukai/IdeaProjects/iocoder-pro/upload
  # 日志输出路径
  logfile: /Users/wukai/IdeaProjects/iocoder-pro/logs
  # 获取ip地址开关
  addressEnabled: false
  # 验证码类型 math 数组计算 char 字符验证
  captchaType: math

  captcha:
    timeout: 5m
    width: 160
    height: 60


spring:
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  profiles:
    active: dev
  # 解决 springboot 2.6.x 整合 knife4j 3.0.x 依赖冲突 (启动报错：Failed to start bean 'documentationPluginsBootstrapper')
  # 整合 activiti 后 需要在 Knife4jConfig.class 中添加 webEndpointServletHandlerMapping 方法
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # 允许循环依赖
  main:
    allow-circular-references: true

  application:
    name: iocoder

  # 文件上传大小限制
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 20MB

# 文件服务
minio:
  endpoint: http://127.0.0.1:9000
  accessKey: minioadmin
  secretKey: minioadmin
  bucketName: test

  # thymeleaf 模板配置
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html

  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true


  # 数据源
  datasource:
    druid:
      # 获取链接等待超时时间
      max-wait: 60000
      pool-prepared-statements: true
      #
      validation-query: SELECT 1
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      # 间隔多久进行一次检测，检测须要关闭的空闲链接
      time-between-eviction-runs-millis: 60000
      # 一个链接在链接池中最小的生存时间
      min-evictable-idle-time-millis: 300000
      max-pool-prepared-statement-per-connection-size: 20
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      filters: stat
      filter:
        # 慢SQL记录(sql语句执行时间超过某个界限就记录下来)
        stat:
          slow-sql-millis: 200
          log-slow-sql: true

      # 监控配置
      # Druid WebStatFilter配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: /druid/*,*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico
      # Druid StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        # 登陆监控界面的用户名以及密码，登陆url为localhost:8080/druid
        login-username: admin
        login-password: admin
        allow:
        deny:
  # redis 配置
  redis:
    # 地址
    host: localhost
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 3
    # 密码
    password:
    # 连接超时时间
    timeout: 10s
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接

logging:
  level:
    org.springframework.web: INFO
    com.iocoder: DEBUG
  file:
    path: ${iocoder.logfile}/${spring.application.name}

mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型  auto:"数据库ID自增"
      id-type: auto
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 配置加密密钥
jasypt:
  encryptor:
    property:
      prefix: JASYPT_WK(    # 加密前缀
      suffix: )             # 加密后缀
    password: strangegirl   # 加密秘钥

# Swagger配置
swagger:
  # 是否开启swagger
  enabled: true

# 系统默认配置
default:
  # 默认密码
  password: 666666


# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌前缀
  token-start-with: Bearer
  # 令牌密钥
  secret: abcdefghijklmnopqrstuvwxyzxcvhnhcjmkchtctfdtxjyyvbiuzzjgxhusjdbjabjdhqbuysnjcbkayqbsubqisbianzjbxha
  # 令牌有效期（默认30分钟）
  expireTime: 30



